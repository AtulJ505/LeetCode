class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        long long ans = 0;
        
        // nsi
        stack<int> st;
        vector<int> nsi(n);
        nsi[n-1] = n;
        st.push(n-1);
        for(int i=n-2;i>=0;i--){
            while(st.size()>0 && arr[st.top()]>=arr[i]) st.pop();
            if(st.size()==0) nsi[i] = n;
            else nsi[i] = st.top();
            st.push(i);
        }

        //for psi

        stack<int> gt;
        vector<int> psi(n);
        psi[0] = -1;
        gt.push(0);
        for(int i=1;i<n;i++){
            while(gt.size()>0 && arr[gt.top()]>arr[i]) gt.pop();
            if(gt.size()==0) psi[i] = -1;
            else psi[i] = gt.top();
            gt.push(i);
        }

        // for(int i=0;i<n;i++){
        //     cout<<nsi[i]<<" ";
        // }
        // cout<<endl;
        // for(int i=0;i<n;i++){
        //     cout<<psi[i]<<" ";
        // }
        // cout<<endl;

        // 1,4,6,3,7,8,5,2

        for(int i=0; i<n; i++){
            long long left = i - psi[i];
            long long right = nsi[i] - i;
            ans += (left * right % 1000000007) * arr[i] % 1000000007;
            ans %= 1000000007;
        }
        return ans;
    }
};
